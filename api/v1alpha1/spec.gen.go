// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"htFiLO8WXX+8/v8BAAD//wio01Un7gEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
